import os
from sqlite3 import Connection
import oracledb
from modelo import Carro


class Repositorio:

    def __init__(self):
        self.usuario = os.environ.get("FIAP_ORACLE_USER")
        self.senha = os.environ.get("FIAP_ORACLE_PASS")
        self.url = "oracle.fiap.com.br:1521/orcl"


    def gerarConexao(self) -> Connection:
        conexao = oracledb.connect(user=self.usuario,
                                   password=self.senha,
                                   dsn=self.url)
        return conexao
    def adicionarCarro(self, carro : Carro)-> bool:
        conexao = self.gerarConexao()
        cursor = conexao.cursor
        sql = "INSERT INTO tbl_carro(marca,modelo,ano,tipoDeCombustivel) values(:1, :2, :3, :4)"
        try:
            cursor.execute(sql,(carro.marca, carro.modelo, carro.ano, carro.tipoDeCombustivel))
            print("Carro adicionado")
            conexao.commit()
        except Exception as err:
            print("Falha ao adicionar o carro!")
            conexao.rollback()
            print(err)
            return False
        conexao.close()
        return True
    def excluirCarro(self, carro_id : int)->bool:
        conexao = self.gerarConexao()
        cursor = conexao.cursor()
        sql = "DELETE FROM tbl_carro WHERE id = :1"
        try:
            cursor.execute(sql,(carro_id,))
            print(f"Carro com id {carro_id} excluído!")
            conexao.commit()
        except Exception as err:
            print("Erro ao adicionar o carro!")
            conexao.rollback()
            print(err)
            return False
        conexao.close()
        return True
    def procurarCarro(self, modelo : str)-> list:
        conexao = self.gerarConexao()
        cursor = conexao.cursor()
        sql = "SELECT * FROM tbl_carro WHERE modelo like :1"
        try:
            cursor.execute(sql,("%", modelo , "%",))
            resultado = []
            for carros in cursor:
                c1 = Carro(carro_id=carros[0],
                           marca=carros[1],
                           modelo=carros[2],
                           ano=carros[3],
                           tipoDeCombustivel=carros[4])
                resultado.append(carros)
        except Exception as err:
            print("Nenhum Carro encontrado com esse modelo!")
            conexao.rollback()
            print(err)
        conexao.close()
        return resultado 
       
    def alterarCarro(self, carro_id : int, carro : Carro)-> bool:
        conexao = self.gerarConexao()
        cursor = conexao.cursor()
        sql = "UPDATE tbl_carro SET marca = :1, modelo = :2, ano = :3, tipoDeCombustivel = :4 where id = :4"
        try:
            cursor.execute(sql,(carro.marca, carro.modelo, carro.ano, carro.tipoDeCombustivel, carro.id))
            conexao.commit()
        except Exception as err:
            print("Erro ao atualizar o carro")
            print(err)
            conexao.rollback()
            return False
        conexao.close()
        return True
    
    def gerarTabela(self)->bool:
        conexao = self.gerarConexao()
        cursor = conexao.cursor()
        sql = """Create table tbl_carro(
        id Number generated by default on null as identity primary key,
        marca varchar(60) constraint carro_marca_Nn Not Null
        modelo varchar(60)
        ano Number(4)
        tipoDeCombustivel varchar (30))"""
        try:
            print("Criando a tabela")
            cursor.execute(sql)
            conexao.commit()
        except Exception as err:
            print("Tabela não criada")
            print(err)
            conexao.rollback()
            return False
        conexao.close
        return True


                
        